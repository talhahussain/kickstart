{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\n\nclass RequestRow extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"approveRequest\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approveRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"finalizeRequest\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    const {\n      id,\n      request,\n      approversCount\n    } = this.props;\n    const readyToFinalize = request.approvalCount > approversCount / 2;\n    return __jsx(Row, {\n      disabled: request.complete,\n      positive: readyToFinalize && !request.complete\n    }, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, 'ether')), __jsx(Cell, null, request.recipient), __jsx(Cell, null, request.approvalCount, \"/\", approversCount), __jsx(Cell, null, request.complete ? null : __jsx(Button, {\n      color: \"green\",\n      basic: true,\n      onClick: this.approveRequest\n    }, \"Approve\")), __jsx(Cell, null, request.complete ? null : __jsx(Button, {\n      color: \"teal\",\n      basic: true,\n      onClick: this.finalizeRequest\n    }, \"Finalize\")));\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["E:/etherum/kickstart/component/requestRow.js"],"names":["React","Table","Button","web3","Campaign","RequestRow","Component","campaign","props","address","accounts","eth","getAccounts","methods","approveRequest","id","send","from","finalizeRequest","render","Row","Cell","request","approversCount","readyToFinalize","approvalCount","complete","description","utils","fromWei","value","recipient"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,4CAEnB,YAAW;AAEvB,YAAMC,QAAQ,GAAGH,QAAQ,CAAC,KAAKI,KAAL,CAAWC,OAAZ,CAAzB;AACA,YAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACQ,GAAL,CAASC,WAAT,EAAvB;AACA,YAAML,QAAQ,CAACM,OAAT,CAAiBC,cAAjB,CAAgC,KAAKN,KAAL,CAAWO,EAA3C,EAA+CC,IAA/C,CAAoD;AACrDC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADuC,OAApD,CAAN;AAGJ,KATmC;;AAAA,6CAUlB,YAAW;AAExB,YAAMH,QAAQ,GAAGH,QAAQ,CAAC,KAAKI,KAAL,CAAWC,OAAZ,CAAzB;AACA,YAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACQ,GAAL,CAASC,WAAT,EAAvB;AACA,YAAML,QAAQ,CAACM,OAAT,CAAiBK,eAAjB,CAAiC,KAAKV,KAAL,CAAWO,EAA5C,EAAgDC,IAAhD,CAAqD;AACtDC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADwC,OAArD,CAAN;AAIJ,KAlBmC;AAAA;;AAoBpCS,EAAAA,MAAM,GAAE;AAEH,UAAM;AAACC,MAAAA,GAAD;AAAMC,MAAAA;AAAN,QAAcpB,KAApB;AACA,UAAM;AAACc,MAAAA,EAAD;AAAKO,MAAAA,OAAL;AAAcC,MAAAA;AAAd,QAAgC,KAAKf,KAA3C;AACA,UAAMgB,eAAe,GAAGF,OAAO,CAACG,aAAR,GAAwBF,cAAc,GAAC,CAA/D;AACA,WAEK,MAAC,GAAD;AAAK,MAAA,QAAQ,EAAED,OAAO,CAACI,QAAvB;AAAiC,MAAA,QAAQ,EAAEF,eAAe,IAAI,CAACF,OAAO,CAACI;AAAvE,OACK,MAAC,IAAD,QAAOX,EAAP,CADL,EAEK,MAAC,IAAD,QAAOO,OAAO,CAACK,WAAf,CAFL,EAGK,MAAC,IAAD,QAAOxB,IAAI,CAACyB,KAAL,CAAWC,OAAX,CAAmBP,OAAO,CAACQ,KAA3B,EAAkC,OAAlC,CAAP,CAHL,EAIK,MAAC,IAAD,QAAOR,OAAO,CAACS,SAAf,CAJL,EAKK,MAAC,IAAD,QAAOT,OAAO,CAACG,aAAf,OAA+BF,cAA/B,CALL,EAMK,MAAC,IAAD,QACMD,OAAO,CAACI,QAAR,GAAmB,IAAnB,GACI,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,KAAK,MAA3B;AAA4B,MAAA,OAAO,EAAE,KAAKZ;AAA1C,iBAFV,CANL,EAWK,MAAC,IAAD,QACMQ,OAAO,CAACI,QAAR,GAAmB,IAAnB,GACI,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,OAAO,EAAE,KAAKR;AAAzC,kBAFV,CAXL,CAFL;AAsBJ;;AA/CmC;;AAkDzC,eAAeb,UAAf","sourcesContent":["import React from 'react'\r\nimport {Table, Button} from 'semantic-ui-react'\r\nimport web3 from '../ethereum/web3';\r\nimport Campaign from '../ethereum/campaign'\r\n\r\nclass RequestRow extends React.Component {\r\n\r\n     approveRequest = async() => {\r\n\r\n          const campaign = Campaign(this.props.address);\r\n          const accounts = await web3.eth.getAccounts();\r\n          await campaign.methods.approveRequest(this.props.id).send({\r\n               from: accounts[0]\r\n          })\r\n     }\r\n     finalizeRequest = async() => {\r\n\r\n          const campaign = Campaign(this.props.address);\r\n          const accounts = await web3.eth.getAccounts();\r\n          await campaign.methods.finalizeRequest(this.props.id).send({\r\n               from: accounts[0]\r\n          })\r\n\r\n     }\r\n\r\n     render(){\r\n\r\n          const {Row, Cell} = Table;\r\n          const {id, request, approversCount} = this.props;\r\n          const readyToFinalize = request.approvalCount > approversCount/2;\r\n          return (\r\n\r\n               <Row disabled={request.complete} positive={readyToFinalize && !request.complete}>\r\n                    <Cell>{id}</Cell>\r\n                    <Cell>{request.description}</Cell>\r\n                    <Cell>{web3.utils.fromWei(request.value, 'ether')}</Cell>\r\n                    <Cell>{request.recipient}</Cell>\r\n                    <Cell>{request.approvalCount}/{approversCount}</Cell>\r\n                    <Cell>\r\n                         {request.complete ? null : (                         \r\n                              <Button color=\"green\" basic onClick={this.approveRequest}>Approve</Button>\r\n                         )}\r\n                    </Cell>\r\n                    <Cell>\r\n                         {request.complete ? null : (                         \r\n                              <Button color=\"teal\" basic onClick={this.finalizeRequest}>Finalize</Button>\r\n                    \r\n                         )}\r\n                    </Cell>\r\n                         \r\n               </Row>\r\n          )\r\n     }\r\n}\r\n\r\nexport default RequestRow;"]},"metadata":{},"sourceType":"module"}