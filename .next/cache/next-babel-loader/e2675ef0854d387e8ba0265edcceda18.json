{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Form, Message, Button, Input } from 'semantic-ui-react';\n\nvar ContributeForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(ContributeForm, _React$Component);\n\n  var _super = _createSuper(ContributeForm);\n\n  function ContributeForm() {\n    _classCallCheck(this, ContributeForm);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ContributeForm, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Form, null, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to contribute\"), __jsx(Input, {\n        label: \"ether\",\n        labelPosition: \"right\"\n      })), __jsx(Button, null, \"Contribute!\"));\n    }\n  }]);\n\n  return ContributeForm;\n}(React.Component);\n\nexport default ContributeForm;","map":{"version":3,"sources":["E:/etherum/kickstart/component/contributeForm.js"],"names":["React","Form","Message","Button","Input","ContributeForm","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,OAAd,EAAuBC,MAAvB,EAA+BC,KAA/B,QAA2C,mBAA3C;;IAGMC,c;;;;;;;;;;;;;6BAGQ;AAEJ,aACK,MAAC,IAAD,QACK,MAAC,IAAD,CAAM,KAAN,QACK,4CADL,EAEK,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,OAAb;AAAqB,QAAA,aAAa,EAAC;AAAnC,QAFL,CADL,EAKK,MAAC,MAAD,sBALL,CADL;AASJ;;;;EAduBL,KAAK,CAACM,S;;AAiBnC,eAAeD,cAAf","sourcesContent":["import React from 'react'\r\nimport {Form, Message, Button, Input} from 'semantic-ui-react'\r\n\r\n\r\nclass ContributeForm extends React.Component {\r\n\r\n\r\n     render() {\r\n\r\n          return(\r\n               <Form>\r\n                    <Form.Field>\r\n                         <label>Amount to contribute</label>\r\n                         <Input label=\"ether\" labelPosition=\"right\" />\r\n                    </Form.Field>\r\n                    <Button>Contribute!</Button>\r\n               </Form>\r\n          )\r\n     }\r\n}\r\n\r\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}